<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- Definition of the filter chain & URL pattern mapping -->
	<bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		<sec:filter-chain-map request-matcher="ant">
		    <sec:filter-chain pattern="/**"  filters="
		           securityContextPersistentFilter,
		           logoutFilter,
		           formLoginFilter,
		           rememberMeAuthenticationFilter,
		           anonymousFilter,
		           exceptionTranslationFilter,
		           ajaxTimeoutRedirectFilter,
		           filterSecurityInterceptor
		           " />
	  	</sec:filter-chain-map>
	</bean>

<!-- 
	Filters order:
	
    CHANNEL_FILTER,
    CONCURRENT_SESSION_FILTER,
    SECURITY_CONTEXT_FILTER,
    LOGOUT_FILTER,
    X509_FILTER,
    PRE_AUTH_FILTER,
    CAS_FILTER,
    FORM_LOGIN_FILTER,
    OPENID_FILTER,
    LOGIN_PAGE_FILTER,
    DIGEST_AUTH_FILTER,
    BASIC_AUTH_FILTER,
    REQUEST_CACHE_FILTER,
    SERVLET_API_SUPPORT_FILTER,
    JAAS_API_SUPPORT_FILTER,
    REMEMBER_ME_FILTER,
    ANONYMOUS_FILTER,
    SESSION_MANAGEMENT_FILTER,
    EXCEPTION_TRANSLATION_FILTER,
    FILTER_SECURITY_INTERCEPTOR,
    SWITCH_USER_FILTER,
    
 -->

	 
	<!-- Filter to store the Authentication object in the HTTP Session -->	
	<bean id="securityContextPersistentFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<property name="securityContextRepository" ref="securityContextRepository" />
	</bean>
	<bean id="securityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />


	
	<!-- Filter to manage the login process -->
	<!-- The class org.springframework.security.web.authentication.AuthenticationProcessingFilter just extends UsernamePasswordAuthenticationFilter -->
	<bean id="formLoginFilter" class="fr.getlinks.security.ReCaptchaAuthenticationFilter">
  		<property name="authenticationManager" ref="authenticationManager"/>
  		<property name="filterProcessesUrl" value="/authentication"/>
  		<property name="authenticationSuccessHandler">
	        <bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
	        	<property name="alwaysUseDefaultTargetUrl" value="true"/>
	            <property name="defaultTargetUrl" value="/home" />
	        </bean>
	    </property>
	    <property name="authenticationFailureHandler">
	    	<bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
	            <property name="defaultFailureUrl" value="/login?error=1" />
	        </bean>
	    </property>
	    <property name="sessionAuthenticationStrategy">
        	<bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy" />
    	</property>
    	<property name="rememberMeServices" ref="rememberMeServices"/>
	    <property name="privateKey" value="6LfGO9USAAAAAFcqmDHv_n0kdJXiNXiIzKpdwfvh"/>
	</bean> 

    
    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
	    	<list>
	        	<ref bean="authenticationProvider" />
	            <ref bean="anonymousProvider" />
	            <ref bean="rememberMeAuthenticationProvider"/>
	        </list>
	    </property>
	</bean>
    
    <bean id="anonymousProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
        <property name="key" value="unique_key_123" />
    </bean>
    
    <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
	</bean>
	
	<sec:user-service id="userDetailsService">
        <sec:user name="magdou" password="password" authorities="ROLE_USER"/>
        <sec:user name="duyhai" password="password" authorities="ROLE_USER"/>
    </sec:user-service>
    
	<bean id="rememberMeAuthenticationFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<constructor-arg index="0" ref="authenticationManager"/>
		<constructor-arg index="1" ref="rememberMeServices"/>
	</bean>
		
	<bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices"> 
	    <property name="userDetailsService" ref="userDetailsService" /> 
	    <property name="key" value="sd1ze4sd" /> 
	    <property name="tokenValiditySeconds" value="10800" />
	    <property name="alwaysRemember" value="true"/>
	    <property name="cookieName" value="GETLINK_REMEMBER_ME_COOKIE"/> 
	</bean>
	
	<bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<constructor-arg value="sd1ze4sd"/>
	</bean>
	
	<bean id="anonymousFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter" >
	    <property name="key" value="unique_key_123" />
	    <property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
	</bean>

 	<!-- Filter to redirect to login page -->
	<bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <property name="authenticationEntryPoint" ref="authenticationEntryPoint"/>
        <property name="accessDeniedHandler" ref="accessDeniedHandler"/>
    </bean>
    
    <!-- The class org.springframework.security.web.authentication.AuthenticationEntryPoint just extends LoginUrlAuthenticationEntryPoint -->
	<bean id="authenticationEntryPoint"  class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
	  <property name="loginFormUrl" value="/login"/>
	  <property name="forceHttps" value="false"/>
	</bean>
    
	<bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
  		<property name="errorPage" value="/accessDenied"/>
	</bean>

	
	
	<!-- Filter for role checking -->
	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="httpRequestAccessDecisionManager"/>
        <property name="securityMetadataSource">
            <sec:filter-security-metadata-source 
            	lowercase-comparisons="true" 
            	request-matcher="ant"
            	use-expressions="true">
            	
                <sec:intercept-url pattern="/login" access="permitAll"/>
                <sec:intercept-url pattern="/about" access="permitAll"/>
                <sec:intercept-url pattern="/share/**" access="permitAll"/>
                <sec:intercept-url pattern="/activate/**" access="permitAll"/>
                <sec:intercept-url pattern="/assets/**" access="permitAll"/>               
                <sec:intercept-url pattern="/**" access="isAuthenticated()"/>
            </sec:filter-security-metadata-source>
        </property>
    </bean>
 	

    <bean id="httpRequestAccessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false"/>
        <property name="decisionVoters">
            <list>
                <ref bean="webExpressionVoter"/>
                <ref bean="authenticatedVoter"/>
            </list>
        </property>
    </bean>
    
    <bean id="webExpressionVoter" class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
	<bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter" />

	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
	    <constructor-arg value="/login" />
	    <constructor-arg>
	        <list>
	        	<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
	        	<bean class="org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler">
	        		<constructor-arg value="GETLINK_REMEMBER_ME_COOKIE" />
	        	</bean>
	        </list>
	    </constructor-arg>
	    <property name="filterProcessesUrl" value="/logout"/>
	</bean>
    
	<bean id="ajaxTimeoutRedirectFilter" class="fr.getlinks.security.AjaxTimeoutRedirectFilter">
		<property name="customSessionExpiredErrorCode" value="${ajax.session.timeout.http.code}"/>
	</bean>
</beans>	
